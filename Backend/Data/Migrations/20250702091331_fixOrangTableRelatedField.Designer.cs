// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250702091331_fixOrangTableRelatedField")]
    partial class fixOrangTableRelatedField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.AktaKelahiran", b =>
                {
                    b.Property<int>("AktaKelahiran_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AktaKelahiran_id"));

                    b.Property<bool>("Is_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nik")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NikAyah")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NikIbu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("Tanggal_penerbitan")
                        .HasColumnType("date");

                    b.HasKey("AktaKelahiran_id");

                    b.HasIndex("Nik")
                        .IsUnique();

                    b.HasIndex("NikAyah");

                    b.HasIndex("NikIbu");

                    b.ToTable("AktaKelahiran");
                });

            modelBuilder.Entity("Backend.Models.AnggotaKartuKeluarga", b =>
                {
                    b.Property<string>("KartuKeluargaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nik")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Is_active")
                        .HasColumnType("bit");

                    b.Property<string>("Jenis_pekerjaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Masih_anak")
                        .HasColumnType("bit");

                    b.Property<string>("Pendidikan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Peran")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KartuKeluargaId", "Nik");

                    b.HasIndex("Nik")
                        .IsUnique();

                    b.ToTable("AnggotaKartuKeluarga");
                });

            modelBuilder.Entity("Backend.Models.KartuKeluarga", b =>
                {
                    b.Property<string>("Nomor_KK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_active")
                        .HasColumnType("bit");

                    b.Property<string>("Kode_pos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nik_kepala_keluarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Provinsi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Tanggal_penerbitan")
                        .HasColumnType("date");

                    b.HasKey("Nomor_KK");

                    b.HasIndex("Nik_kepala_keluarga")
                        .IsUnique();

                    b.ToTable("KartuKeluarga");
                });

            modelBuilder.Entity("Backend.Models.Ktp", b =>
                {
                    b.Property<int>("Ktp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ktp_id"));

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Berlaku_hingga")
                        .HasColumnType("date");

                    b.Property<bool>("Is_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Kota_pembuatan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nik")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Sudah_Kawin")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("Tanggal_penerbitan")
                        .HasColumnType("date");

                    b.HasKey("Ktp_id");

                    b.HasIndex("Nik")
                        .IsUnique();

                    b.ToTable("Ktp");
                });

            modelBuilder.Entity("Backend.Models.Orang", b =>
                {
                    b.Property<string>("Nik")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Agama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Kewarganegaraan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Tanggal_lahir")
                        .HasColumnType("date");

                    b.Property<string>("Tempat_lahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nik");

                    b.ToTable("Orang");
                });

            modelBuilder.Entity("Backend.Models.AktaKelahiran", b =>
                {
                    b.HasOne("Backend.Models.Orang", "Orang")
                        .WithOne("AktaKelahiran")
                        .HasForeignKey("Backend.Models.AktaKelahiran", "Nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Orang", "Ayah")
                        .WithMany()
                        .HasForeignKey("NikAyah")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Backend.Models.Orang", "Ibu")
                        .WithMany()
                        .HasForeignKey("NikIbu")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Ayah");

                    b.Navigation("Ibu");

                    b.Navigation("Orang");
                });

            modelBuilder.Entity("Backend.Models.AnggotaKartuKeluarga", b =>
                {
                    b.HasOne("Backend.Models.KartuKeluarga", "KartuKeluarga")
                        .WithMany("AnggotaKartuKeluargas")
                        .HasForeignKey("KartuKeluargaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Orang", "Orang")
                        .WithOne("AnggotaKartuKeluarga")
                        .HasForeignKey("Backend.Models.AnggotaKartuKeluarga", "Nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KartuKeluarga");

                    b.Navigation("Orang");
                });

            modelBuilder.Entity("Backend.Models.KartuKeluarga", b =>
                {
                    b.HasOne("Backend.Models.Orang", "Kepala_Keluarga")
                        .WithOne("KartuKeluargaSeabagaiKepala")
                        .HasForeignKey("Backend.Models.KartuKeluarga", "Nik_kepala_keluarga")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kepala_Keluarga");
                });

            modelBuilder.Entity("Backend.Models.Ktp", b =>
                {
                    b.HasOne("Backend.Models.Orang", "Orang")
                        .WithOne("Ktp")
                        .HasForeignKey("Backend.Models.Ktp", "Nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orang");
                });

            modelBuilder.Entity("Backend.Models.KartuKeluarga", b =>
                {
                    b.Navigation("AnggotaKartuKeluargas");
                });

            modelBuilder.Entity("Backend.Models.Orang", b =>
                {
                    b.Navigation("AktaKelahiran");

                    b.Navigation("AnggotaKartuKeluarga");

                    b.Navigation("KartuKeluargaSeabagaiKepala");

                    b.Navigation("Ktp");
                });
#pragma warning restore 612, 618
        }
    }
}
